// Spec 1 - The engine speed never reaches omega

monitor BooleanMonitorSpec1 (real omega) {

        signal {  real v_speed; real e_speed; int gear}
        
        domain boolean;
        
        formula globally #[ e_speed < omega ]# ;
}

monitor QuantitativeMonitorSpec1 (real omega) {

        signal { real v_speed; real e_speed;  int gear}
        
        domain minmax;
        
        formula globally #[ omega - e_speed ]# ;
}

/* Spec 2 - The engine and the vehicle speed never 
reach omega and v, respectively. */

monitor BooleanMonitorSpec2 (real omega, real v) {

        signal { real v_speed; real e_speed;  int gear}
        
        domain boolean;
        
        formula globally {#[ e_speed < omega ]# & #[ v_speed < v ]#} ;
}

monitor QuantitativeMonitorSpec2 (real omega, real v) {

        signal { real v_speed; real e_speed;  int gear}
        
        domain minmax;
        
        formula globally {#[ omega - e_speed ]# & #[ v - v_speed ]#} ;
}

/* Spec 6 - If the engine speed is always less than omega
the vehicle speed can not exceed v in less than T sec. */

monitor BooleanMonitorSpec6 (real omega, real v, real T) {

        signal { real v_speed; real e_speed;  int gear}
        
        domain boolean;
        
        formula ! { {eventually [0 T] #[ v_speed > v ]#} &  {globally #[ e_speed < omega ]#} } ;
}


monitor QuantitativeMonitorSpec6 (real omega, real v, real T) {

        signal { real v_speed; real e_speed;  int gear}
        
        domain minmax;
        
        formula ! { {eventually [0 T] #[ v_speed - v ]#} &  {globally #[ omega - e_speed ]#} } ;
}

/* Spec 7 - Within T sec the vehicle speed is above v 
and from that point on the engine speed can not exceed 
v in less than T sec. */

monitor BooleanMonitorSpec7 (real omega, real v, real T) {

        signal { real v_speed; real e_speed;  int gear}
        
        domain boolean;
        
        formula eventually [0 T] #[ v_speed >= v ]# &  globally #[ e_speed < omega ]#  ;
}


monitor QuantitativeMonitorSpec7 (real omega, real v, real T) {

        signal { real v_speed; real e_speed;  int gear}
        
        domain minmax;
        
        formula eventually [0 T] #[ v_speed - v ]# &  globally #[ omega - e_speed ]#  ;
}



