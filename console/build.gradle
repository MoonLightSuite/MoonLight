/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    compile project(":core")
    compile project(":api")
    compile project(":script:eu.quanticol.moonlight.xtext.MoonLightScript")
    compile project(":script:eu.quanticol.moonlight.xtext.MoonLightScript.ide")
    implementation "org.eclipse.xtext:org.eclipse.xtext.testing:${xtextVersion}"
}

application {
    // Define the main class for the application.
    mainClassName = 'eu.quanticol.moonlight.MoonLightConsole'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}

jar {
    archiveFileName = 'moonlight.jar'
    manifest {
        attributes "Main-Class": mainClassName
    }
    doFirst {
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
}

task distribution(type: Copy, dependsOn:[jar]) {
    println "exec distribution Task!"
    copy {
        from jar
        into rootProject.file("distribution_files/java/lib/")
    }
    copy {
        from jar
        into rootProject.file("distribution_files/matlab/moonlight/jar")
    }
    copy {
        from jar
        into rootProject.file("distribution_files/python/jar")
    }
}

task release(type: Copy, dependsOn: distribution) {
    from rootProject.file("distribution_files/")
    into rootProject.file("distribution/")
}

//task distributionZip(type: Zip, dependsOn: distribution) {
//    archiveFileName = "moonlight.zip"
//    destinationDirectory = file("$rootDir/distribution/")
//    from "$rootDir/distribution/"
//}